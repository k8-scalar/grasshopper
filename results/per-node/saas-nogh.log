
======evaluation round 1==========

{ "results": "

Experiment consisting of 8 runs and 1 request types:
	SaaSRequest


Load,          Duration,      Troughput,     Capacity,      Slow requests, Timing accuracy
------------------------------------------------------------------------------------------
25,            600s,          14600,         24.333,        0%,            0.823ms        
50,            600s,          29219,         48.698,        0%,            0.436ms        
75,            600s,          43813,         73.022,        0%,            0.281ms        
100,           600s,          58406,         97.343,        0%,            0.763ms        
125,           600s,          73031,         121.718,       0%,            0.319ms        
150,           600s,          87602,         146.003,       0%,            0.532ms        
175,           600s,          102235,        170.392,       0%,            0.266ms        
200,           600s,          116836,        194.727,       0%,            0.827ms        


Breakdown of residence times for SaaSRequest requests:

Load,          Min,           Max,           Mean,          Std. dev.,     Shape,         Scale          (successful)   (failed)       (error)        (conn_problem) (timed_out)    (redirected)   (no_result)    
25             9.455          143.208        26.31          11.703         5.055          5.205          14600          0              0              0              0              0              0              
50             9.27           141.287        25.494         8.957          8.102          3.147          29219          0              0              0              0              0              0              
75             9.391          203.874        25.463         10.678         5.687          4.478          43813          0              0              0              0              0              0              
100            9.307          180.269        25.732         9.69           7.051          3.649          58416          0              0              0              0              0              0              
125            9.009          157.231        25.496         10.516         5.878          4.337          73031          0              0              0              0              0              0              
150            8.828          236.029        25.737         10.997         5.478          4.699          87615          0              0              0              0              0              0              
175            8.701          156.431        25.365         10.317         6.045          4.196          102240         0              0              0              0              0              0              
200            8.256          222.511        25.245         9.364          7.268          3.473          116836         0              0              0              0              0              0              


Percentiles of sampled residence times (only an approximation if residence_times_sample_fraction is set):

SaaSRequest (run 1, 25 users):
	50.0%	of requests handled in 25.525ms.
	90.0%	of requests handled in 36.714ms.
	95.0%	of requests handled in 51.476ms.
	99.0%	of requests handled in 73.89ms.
	99.9%	of requests handled in 87.913ms.
	99.99%	of requests handled in 141.01ms.

SaaSRequest (run 2, 50 users):
	50.0%	of requests handled in 25.098ms.
	90.0%	of requests handled in 33.042ms.
	95.0%	of requests handled in 37.716ms.
	99.0%	of requests handled in 63.554ms.
	99.9%	of requests handled in 97.32ms.
	99.99%	of requests handled in 115.685ms.

SaaSRequest (run 3, 75 users):
	50.0%	of requests handled in 24.759ms.
	90.0%	of requests handled in 34.774ms.
	95.0%	of requests handled in 42.697ms.
	99.0%	of requests handled in 69.947ms.
	99.9%	of requests handled in 103.565ms.
	99.99%	of requests handled in 143.073ms.

SaaSRequest (run 4, 100 users):
	50.0%	of requests handled in 25.213ms.
	90.0%	of requests handled in 34.152ms.
	95.0%	of requests handled in 39.282ms.
	99.0%	of requests handled in 67.192ms.
	99.9%	of requests handled in 99.581ms.
	99.99%	of requests handled in 151.473ms.

SaaSRequest (run 5, 125 users):
	50.0%	of requests handled in 24.718ms.
	90.0%	of requests handled in 34.518ms.
	95.0%	of requests handled in 41.645ms.
	99.0%	of requests handled in 71.583ms.
	99.9%	of requests handled in 101.279ms.
	99.99%	of requests handled in 131.42ms.

SaaSRequest (run 6, 150 users):
	50.0%	of requests handled in 24.892ms.
	90.0%	of requests handled in 35.129ms.
	95.0%	of requests handled in 42.83ms.
	99.0%	of requests handled in 72.37ms.
	99.9%	of requests handled in 108.118ms.
	99.99%	of requests handled in 186.129ms.

SaaSRequest (run 7, 175 users):
	50.0%	of requests handled in 24.748ms.
	90.0%	of requests handled in 34.264ms.
	95.0%	of requests handled in 41.378ms.
	99.0%	of requests handled in 69.681ms.
	99.9%	of requests handled in 105.729ms.
	99.99%	of requests handled in 136.566ms.

SaaSRequest (run 8, 200 users):
	50.0%	of requests handled in 24.837ms.
	90.0%	of requests handled in 33.186ms.
	95.0%	of requests handled in 38.899ms.
	99.0%	of requests handled in 63.756ms.
	99.9%	of requests handled in 99.736ms.
	99.99%	of requests handled in 157.157ms.

" }
======evaluation round 2==========

{ "results": "

Experiment consisting of 8 runs and 1 request types:
	SaaSRequest


Load,          Duration,      Troughput,     Capacity,      Slow requests, Timing accuracy
------------------------------------------------------------------------------------------
25,            600s,          14599,         24.332,        0%,            0.861ms        
50,            600s,          29211,         48.685,        0%,            0.42ms         
75,            600s,          43822,         73.037,        0%,            0.376ms        
100,           600s,          58426,         97.377,        0%,            0.457ms        
125,           600s,          72980,         121.633,       0%,            0.922ms        
150,           600s,          87586,         145.977,       0%,            0.313ms        
175,           600s,          102190,        170.317,       0%,            0.942ms        
200,           600s,          116759,        194.598,       0%,            0.292ms        


Breakdown of residence times for SaaSRequest requests:

Load,          Min,           Max,           Mean,          Std. dev.,     Shape,         Scale          (successful)   (failed)       (error)        (conn_problem) (timed_out)    (redirected)   (no_result)    
25             9.338          101.377        26.036         12.553         4.302          6.052          14599          0              0              0              0              0              0              
50             9.114          182.767        25.549         9.725          6.902          3.702          29211          0              0              0              0              0              0              
75             8.874          130.088        25.605         10.536         5.906          4.335          43822          0              0              0              0              0              0              
100            8.983          180.208        25.382         9.908          6.562          3.868          58426          0              0              0              0              0              0              
125            9.177          163.981        25.989         10.44          6.197          4.194          72983          0              0              0              0              0              0              
150            9.091          191.645        25.677         10.268         6.254          4.106          87598          0              0              0              0              0              0              
175            9.108          177.617        25.838         10.211         6.403          4.035          102199         0              0              0              0              0              0              
200            8.397          190.967        25.727         9.84           6.836          3.763          116760         0              0              0              0              0              0              


Percentiles of sampled residence times (only an approximation if residence_times_sample_fraction is set):

SaaSRequest (run 1, 25 users):
	50.0%	of requests handled in 24.947ms.
	90.0%	of requests handled in 39.471ms.
	95.0%	of requests handled in 54.661ms.
	99.0%	of requests handled in 75.321ms.
	99.9%	of requests handled in 88.823ms.
	99.99%	of requests handled in 100.291ms.

SaaSRequest (run 2, 50 users):
	50.0%	of requests handled in 25.028ms.
	90.0%	of requests handled in 33.206ms.
	95.0%	of requests handled in 37.981ms.
	99.0%	of requests handled in 68.347ms.
	99.9%	of requests handled in 105.049ms.
	99.99%	of requests handled in 150.606ms.

SaaSRequest (run 3, 75 users):
	50.0%	of requests handled in 24.932ms.
	90.0%	of requests handled in 34.628ms.
	95.0%	of requests handled in 42.024ms.
	99.0%	of requests handled in 72.198ms.
	99.9%	of requests handled in 99.659ms.
	99.99%	of requests handled in 118.525ms.

SaaSRequest (run 4, 100 users):
	50.0%	of requests handled in 24.781ms.
	90.0%	of requests handled in 33.5ms.
	95.0%	of requests handled in 39.026ms.
	99.0%	of requests handled in 69.432ms.
	99.9%	of requests handled in 103.599ms.
	99.99%	of requests handled in 134.322ms.

SaaSRequest (run 5, 125 users):
	50.0%	of requests handled in 25.323ms.
	90.0%	of requests handled in 35.075ms.
	95.0%	of requests handled in 41.774ms.
	99.0%	of requests handled in 69.774ms.
	99.9%	of requests handled in 109.204ms.
	99.99%	of requests handled in 149.009ms.

SaaSRequest (run 6, 150 users):
	50.0%	of requests handled in 24.987ms.
	90.0%	of requests handled in 34.699ms.
	95.0%	of requests handled in 41.851ms.
	99.0%	of requests handled in 68.361ms.
	99.9%	of requests handled in 103.925ms.
	99.99%	of requests handled in 144.892ms.

SaaSRequest (run 7, 175 users):
	50.0%	of requests handled in 25.091ms.
	90.0%	of requests handled in 34.651ms.
	95.0%	of requests handled in 41.248ms.
	99.0%	of requests handled in 69.199ms.
	99.9%	of requests handled in 106.376ms.
	99.99%	of requests handled in 141.645ms.

SaaSRequest (run 8, 200 users):
	50.0%	of requests handled in 25.107ms.
	90.0%	of requests handled in 34.48ms.
	95.0%	of requests handled in 40.583ms.
	99.0%	of requests handled in 66.121ms.
	99.9%	of requests handled in 99.686ms.
	99.99%	of requests handled in 160.004ms.

" }
======evaluation round 1==========

{ "results": "

Experiment consisting of 2 runs and 0 request types:


Load,          Duration,      Troughput,     Capacity,      Slow requests, Timing accuracy
------------------------------------------------------------------------------------------
25,            600s,          14595,         24.325,        0%,            1.101ms        
0,             600s,          0,             0,             ?%,            0ms            


Percentiles of sampled residence times (only an approximation if residence_times_sample_fraction is set):

SaaSRequest (run 1, 25 users):
	50.0%	of requests handled in 25.462ms.
	90.0%	of requests handled in 38.726ms.
	95.0%	of requests handled in 52.219ms.
	99.0%	of requests handled in 73.275ms.
	99.9%	of requests handled in 92.363ms.
	99.99%	of requests handled in 122.07ms.
(No requests for run 2.)

" }
======evaluation round 1==========

{ "results": "

Experiment consisting of 1 runs and 0 request types:


Load,          Duration,      Troughput,     Capacity,      Slow requests, Timing accuracy
------------------------------------------------------------------------------------------
0,             600s,          0,             0,             ?%,            0ms            


Percentiles of sampled residence times (only an approximation if residence_times_sample_fraction is set):
(No requests for run 1.)

" }
======evaluation round 1==========

{ "results": "

Experiment consisting of 1 runs and 0 request types:


Load,          Duration,      Troughput,     Capacity,      Slow requests, Timing accuracy
------------------------------------------------------------------------------------------
0,             600s,          0,             0,             ?%,            0ms            


Percentiles of sampled residence times (only an approximation if residence_times_sample_fraction is set):
(No requests for run 1.)

" }